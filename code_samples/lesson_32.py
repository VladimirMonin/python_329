"""
Lesson 32
12.11.2023

Тема: Абстрактные классы. Полиморфизм
- Разбор ДЗ службы доставки
- Потребность в абстрактных классах
"""

"""
У нас может быть огромное количество разных служб доставки,
но все они должны иметь одинаковый интерфейс.

К примеру метод посчитать стоимость доставки, метод посчитать время доставки
и т.д.

В таком случае мы можем создать абстрактный класс Delivery, который будет
содержать в себе все необходимые методы, а все остальные классы будут его
наследовать.

Использование абстрактных классов позволяет нам создавать общий интерфейс

Использование одинаковых методов у разных классов называется полиморфизмом
"""


class Delivery:
    """
    Базовый класс для доставки
    """

    def __init__(self, delivery_speed: int):
        self.delivery_speed = delivery_speed


class DeliveryServiceA(Delivery):
    """
    Класс для доставки сервисом A
    """


class DeliveryServiceB(Delivery):
    """
    Класс для доставки сервисом B. У него есть
    международная доставка, поэтому мы используем миксин InternationalMixin
    """


class DeliveryServiceC(Delivery):
    """
    Класс для доставки сервисом C. У него есть
    международная доставка, поэтому мы используем миксин InternationalMixin
    """
