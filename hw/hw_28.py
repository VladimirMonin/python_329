"""

# –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ üìÉ

**"–ü–æ–≥–æ–¥–Ω—ã–π –ê–Ω–∞–ª–∏—Ç–∏–∫ —Å Marshmallow –∏ Dataclasses"**

### –ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
–í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ –í—ã –±—É–¥–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–≥–æ–¥—ã, –∏—Å–ø–æ–ª—å–∑—É—è Python. –í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äì –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è
–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ API, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏—Ö –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç
—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ. –í—ã –±—É–¥–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å dataclasses –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫—É
Marshmallow –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏.

### –û–ø–∏—Å–∞–Ω–∏–µ –ó–∞–¥–∞–Ω–∏—è
1. **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:**
   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ —Å OpenWeatherMap API.

```python
import requests

def get_weather(city_name):
    api_key = "–í–ê–®_API_–ö–õ–Æ–ß" # –ú–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –º–æ–π. 23496c2a58b99648af590ee8a29c5348
    base_url = "https://api.openweathermap.org/data/2.5/weather"
    params = {
        'q': city_name,
        'lang': 'ru',
        'units': 'metric',
        'appid': api_key
    }
    response = requests.get(base_url, params=params)
    return response.json()

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
city = "–ú–æ—Å–∫–≤–∞"
weather_data = get_weather(city)
print(weather_data)

```


2. **–°–æ–∑–¥–∞–Ω–∏–µ Dataclass `CurrentWeather`:**
   - –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –¥–∞—Ç–∞–∫–ª–∞—Å—Å `CurrentWeather`, –≤–∫–ª—é—á–∞—é—â–∏–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –í–∞–º –ø–æ–ª—è –∏–∑ –æ—Ç–≤–µ—Ç–∞ API. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏, –¥—Ä—É–≥–∏–µ ‚Äì –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏.

3. **–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã Marshmallow:**
   - –ù–∞ –æ—Å–Ω–æ–≤–µ –¥–∞—Ç–∞–∫–ª–∞—Å—Å–∞ `CurrentWeather` —Å–æ–∑–¥–∞–π—Ç–µ —Å—Ö–µ–º—É Marshmallow.
   - –†–∞—Å—à–∏—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—É—é —Å—Ö–µ–º—É, –¥–æ–±–∞–≤–∏–≤ –≤ –Ω–µ—ë –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–∏–∞–ø–∞–∑–æ–Ω –∑–Ω–∞—á–µ–Ω–∏–π, —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã).

4. **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è JSON Schema:**
   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É `marshmallow_jsonschema` –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤–∞—à–µ–π —Å—Ö–µ–º—ã Marshmallow –≤ JSON Schema.
   - –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ö–µ–º—É –≤ —Ñ–∞–π–ª.

5. **–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –∞—Å–ø–µ–∫—Ç:**
   - –í—ã–±–æ—Ä –ø–æ–ª–µ–π –¥–ª—è –¥–∞—Ç–∞–∫–ª–∞—Å—Å–∞ –∏ –º–µ—Ç–æ–¥–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å—Ç–∞—ë—Ç—Å—è –∑–∞ –í–∞–º–∏. –ë—É–¥—å—Ç–µ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–º–∏ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ —Å—á–∏—Ç–∞–µ—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏.


### –ü—Ä–∏–º–µ—Ä–Ω–∞—è –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ö–æ–¥–∞
```python
# –ò–º–ø–æ—Ä—Ç—ã –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤/—Å—Ö–µ–º –∑–¥–µ—Å—å

# –ó–¥–µ—Å—å –∫–æ–¥ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –∏ –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥ —á–µ—Ä–µ–∑ –∏–Ω–ø—É—Ç)

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –¥–∞—Ç–∞–∫–ª–∞—Å—Å–∞

# –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é Marshmallow

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ JSON Schema

# –í—ã–≤–æ–¥ –ø–æ–≥–æ–¥—ã –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª

if __name__ == "__main__":
    validate_it = Validate()
    validate_it()
```

–≠—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞–≤—ã–∫–æ–≤ —Ä–∞–±–æ—Ç—ã —Å –≤–Ω–µ—à–Ω–∏–º–∏ API, –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö, –∞ —Ç–∞–∫–∂–µ —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π. –£–¥–∞—á–∏!

# –ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ üëå

- –ß–∏—Å—Ç–æ—Ç–∞ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–¥–∞.
- –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ dataclasses.
- –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫ marshmallow, marshmallow_dataclass –∏ marshmallow_jsonschema.
- –†–∞–±–æ—Ç–∞ —Å–¥–∞–µ—Ç—Å—è –≤ –≤–∏–¥–µ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ .py.
- –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–¥–∞
	- –∑–∞–ø—Ä–æ—Å –≥–æ—Ä–æ–¥–∞
	- –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
	- –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
	- –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
	- –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã –≤ –≥–æ—Ä–æ–¥–µ
	- –¥–æ–ª–∂–Ω–∞ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è JSON Schema (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É, –µ—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ –µ—Å—Ç—å - —á—Ç–æ–±—ã –æ–Ω –Ω–µ –ø–∏—Å–∞–ª—Å—è)
- –•–æ—Ä–æ—à–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (–º–æ–¥—É–ª—å, —Ç.–µ. —Ñ–∞–π–ª + –∫–ª–∞—Å—Å—ã + –º–µ—Ç–æ–¥—ã)

"""
import json
import os
from dataclasses import dataclass
from pprint import pprint
from typing import List

from marshmallow import Schema, fields, ValidationError, validate
from marshmallow_dataclass import class_schema

from marshmallow_jsonschema import JSONSchema

import requests


class WeatherRequest:
    def __init__(self):
        self.city_name = None
        self.api_key = "23496c2a58b99648af590ee8a29c5348"
        self.base_url = "https://api.openweathermap.org/data/2.5/weather"
        self.params = {
            'q': None,
            'lang': 'ru',
            'units': 'metric',
            'appid': self.api_key
        }
        self.__response = None

    def __str__(self):
        return f'{self.weather_data}'

    def __get_response(self):
        response = requests.get(self.base_url, params=self.params)
        self.__response = response.json()

    def __call__(self, city_name):
        self.city_name = city_name
        self.params['q'] = self.city_name
        self.__get_response()
        return self.__response


@dataclass
class CurrentWeather:
    city_name: str
    temp: float
    feels_like: float
    description: str
    visibility: int
    pop: float = None

    def __str__(self):
        return f'–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {self.city_name}:\n' \
               f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {self.temp}¬∞C\n' \
               f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {self.feels_like}¬∞C\n' \
               f'–û–ø–∏—Å–∞–Ω–∏–µ: {self.description}\n' \
               f'–í–∏–¥–∏–º–æ—Å—Ç—å: {self.visibility} –º\n' \
               f'–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤: {self.pop}'


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å—Ö–µ–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞—Ç–∞–∫–ª–∞—Å—Å–∞
BaseCurrentWeatherSchema = class_schema(CurrentWeather)


# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å—Ö–µ–º—ã, –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∞–∑–æ–≤–æ–π —Å—Ö–µ–º—ã
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏

class CurrentWeatherSchema(BaseCurrentWeatherSchema):
    city_name = fields.Str(required=True, validate=validate.Length(min=2, max=80))
    temp = fields.Float(required=True, validate=validate.Range(min=-80, max=80))
    feels_like = fields.Float(required=True, validate=validate.Range(min=-80, max=80))
    description = fields.Str(required=True, validate=[
        validate.Length(min=2, max=80),
        validate.Regexp(r'^[–ê-–Ø–∞-—è–Å—ëA-Za-z0-9\s]+$')
    ])
    visibility = fields.Int(required=True, validate=validate.Range(min=0, max=10000))
    pop = fields.Float(required=False, validate=validate.Range(min=0, max=1))


def main():
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≥–æ—Ä–æ–¥
    city = input('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥: ')

    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ WeatherRequest (–∑–∞–ø—Ä–æ—Å)
    weather_request = WeatherRequest()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    weather_data = weather_request(city)
    # pprint(weather_data)

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –∏ –ø–æ–ª—É—á–∞–µ–º –Ω—É–∂–Ω—ã–µ –Ω–∞–º –¥–∞–Ω–Ω—ã–µ
    weather_data = {
        'city_name': weather_data['name'],
        'temp': weather_data['main']['temp'],
        'feels_like': weather_data['main']['feels_like'],
        'description': weather_data['weather'][0]['description'],
        'visibility': weather_data['visibility']
    }

    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ö–µ–º—É
    base_schema = BaseCurrentWeatherSchema()
    # –°–æ–∑–¥–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ö–µ–º—É
    schema = CurrentWeatherSchema()

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª —Å—Ö–µ–º—ã hw_28_schema.json

    if not os.path.exists('hw_28_schema.json'):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ö–µ–º—É –≤ —Ñ–∞–π–ª hw_28_schema.json indent 4 ensure_ascii=False
        schema_file = JSONSchema()

        with open('hw_28_schema.json', 'w', encoding='utf-8') as f:
            json.dump(schema_file.dump(schema), f, indent=4, ensure_ascii=False)

    # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏ –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ. –í—ã–≤–æ–¥–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    try:
        result = schema.load(weather_data)
        print(result)
    except ValidationError as err:
        print(err.messages)


main()
